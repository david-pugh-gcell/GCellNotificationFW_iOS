// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import CoreBluetooth;
@import CoreLocation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSUUID;
@class NSNumber;
@class GCBeaconAction;
@class NSDate;
@class NSCoder;

SWIFT_CLASS("_TtC24GCBeaconNotificationFWv18GCBeacon")
@interface GCBeacon : NSObject <NSCopying>
@property (nonatomic, copy) NSString * _Nonnull label;
@property (nonatomic, strong) NSUUID * _Nonnull uuid;
@property (nonatomic, strong) NSNumber * _Nonnull major;
@property (nonatomic, strong) NSNumber * _Nonnull minor;
@property (nonatomic, copy) NSArray<GCBeaconAction *> * _Nonnull actionList;
@property (nonatomic) NSInteger lastKnownRssi;
@property (nonatomic, strong) NSDate * _Nullable lastSeen;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuidString;
@property (nonatomic, readonly) BOOL proximityOk;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Null_unspecified)zone;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC24GCBeaconNotificationFWv114GCBeaconAction")
@interface GCBeaconAction : NSObject
@property (nonatomic, readonly) NSInteger actionRecurrance;
@property (nonatomic, readonly) NSInteger minActionRssi;
@property (nonatomic, readonly, copy) NSString * _Nonnull actionName;
@property (nonatomic, strong) NSDate * _Nullable lastUsed;
@property (nonatomic, readonly) BOOL showAction;
@end

@class CLBeaconRegion;
@class CLLocationManager;
@class CLBeacon;
@class CLRegion;
@class NSError;
@class CBPeripheralManager;
@protocol GCBeaconManagerDelegate;

SWIFT_CLASS("_TtC24GCBeaconNotificationFWv115GCBeaconManager")
@interface GCBeaconManager : NSObject <CBPeripheralManagerDelegate, CLLocationManagerDelegate>
@property (nonatomic, weak) id <GCBeaconManagerDelegate> _Nullable delegate;
@property (nonatomic) BOOL useDefaultBeaconRegion;
@property (nonatomic) BOOL autoNotify;
@property (nonatomic) BOOL debug;
@property (nonatomic) BOOL gpsTrack;
@property (nonatomic, copy) NSArray<CLBeaconRegion *> * _Nonnull beaconRegions;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)addBeaconRegion:(CLBeaconRegion * _Nonnull)beaconRegion;
- (void)startScanningForBeacons;
- (void)stopScanningForBeacons;
- (CLBeaconRegion * _Nonnull)gcellDefaultRegion;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager rangingBeaconsDidFailForRegion:(CLBeaconRegion * _Nonnull)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)peripheralManagerDidUpdateState:(CBPeripheralManager * _Nonnull)peripheral;
@end

@class GCOffer;

SWIFT_PROTOCOL("_TtP24GCBeaconNotificationFWv123GCBeaconManagerDelegate_")
@protocol GCBeaconManagerDelegate
@optional
- (void)beaconsRanged:(GCBeaconManager * _Nonnull)manager beacons:(NSArray<CLBeacon *> * _Nonnull)beacons region:(CLBeaconRegion * _Nonnull)region;
- (void)notificationBeaconsRanged:(NSArray<GCBeacon *> * _Nonnull)beacons;
- (void)notificationActionsReceived:(NSSet<GCBeaconAction *> * _Nonnull)actions;
- (void)notificationOffersReceived:(NSSet<GCOffer *> * _Nonnull)offers;
- (void)offersReceived:(NSArray<GCOffer *> * _Nonnull)offers;
- (void)bleStatusChanged:(GCBeaconManager * _Nonnull)manager status:(BOOL)status;
- (void)errorMessage:(NSInteger)error errorDesc:(NSString * _Nonnull)errorDesc;
- (void)locationServicesNotAllowed:(NSString * _Nonnull)error;
@end


SWIFT_CLASS("_TtC24GCBeaconNotificationFWv112GCExperience")
@interface GCExperience : NSObject
@end


SWIFT_CLASS("_TtC24GCBeaconNotificationFWv17GCOffer")
@interface GCOffer : NSObject
@property (nonatomic, copy) NSString * _Nullable merchantName;
@property (nonatomic, copy) NSString * _Nonnull offerDesc;
@property (nonatomic) BOOL likeable;
@property (nonatomic, copy) NSString * _Nonnull passName;
@property (nonatomic) NSInteger offerId;
@property (nonatomic, strong) NSDate * _Nullable lastSeen;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOfferId:(NSInteger)offerId merchantName:(NSString * _Nonnull)merchantName offerDesc:(NSString * _Nonnull)offerDesc merchantImageName:(NSString * _Nonnull)merchantImageName offerBannerImageName:(NSString * _Nonnull)offerBannerImageName OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSDate (SWIFT_EXTENSION(GCBeaconNotificationFWv1))
- (NSString * _Nonnull)toShortTimeSecString;
- (NSInteger)secondsPassedSinceDate;
- (NSInteger)secondsPassedSinceDateAbs;
@end

#pragma clang diagnostic pop
